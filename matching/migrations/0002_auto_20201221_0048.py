# Generated by Django 3.1.4 on 2020-12-21 00:48

import django.core.validators
from django.db import migrations, models
import matching.validators


class Migration(migrations.Migration):

    dependencies = [
        ('matching', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='matchingentry',
            options={'verbose_name_plural': 'Matching Entries'},
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='adventurous',
            field=models.IntegerField(choices=[(2, 'Strongly Agree'), (1, 'Somewhat Agree'), (0, 'Neither'), (-1, 'Somewhat Disagree'), (-2, 'Strongly Disagree')], help_text='To what extent do you agree with the statement "I\'m adventurous and want to try something very new".'),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_adjectives',
            field=models.JSONField(blank=True, default=list, help_text='What adjectives would you use to describe your album?', validators=[matching.validators.ListOfStringsValidator('Your album adjectives were invalid.', 'album adjectives', choices=('All over the place', 'Ambitious/epic', 'Angry/passionate/intense', 'Chill/slow-paced/ballads', 'Classic/influential', 'Concept album', 'Danceable/festival', 'Disturbing/disgusting', 'Domestic/wholesome/sincere', 'Dreamy/meditative', 'Empowering/proud', 'Experimental/strange', 'Fast-paced/Upbeat', 'Funny', 'Happy/joyful', 'Heartbreaking/break-up', 'Instrumental (i.e. no lyrics)', 'Loud', 'LGBT', 'Lyrical', 'Musically complex', 'Musically simple/acoustic', 'Political', 'Psychedelic', 'Quiet', 'Romantic', 'Sad/melancholic/sombre', 'Screaming/shouting', 'Silly', 'Summery', 'Vibey', 'Wintery'))]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_country',
            field=models.CharField(blank=True, help_text='What country does your album originate from?', max_length=70),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_decade',
            field=models.CharField(blank=True, choices=[('', 'No Choice'), ('Pre-50s', 'Pre-50s'), ('50s', '50s'), ('60s', '60s'), ('70s', '70s'), ('80s', '80s'), ('90s', '90s'), ('00s', '2000s'), ('10s-20s', '2010s-20s')], help_text='What decade does your album most sound like?', max_length=10),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_description',
            field=models.TextField(help_text='How would you describe your album?'),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_macrogenre',
            field=models.CharField(choices=[('CFB', 'Country, Folk & Blues'), ('Classical', 'Classical'), ('ED', 'Electronic and Dance'), ('HHRB', 'Hip Hop and R&B'), ('IIPEPP', 'Indie, Indie Pop, Emo and Pop Punk'), ('JSNSF', 'Jazz, Soul, Neo-Soul and Funk'), ('Pop', 'Pop'), ('RMPNPPRI', 'Rock, Metal, Punk, Noise, Prog, Post-Rock, Industrial'), ('Other', 'Other')], help_text="What macro genre would you classify the album you're recommending in?", max_length=15),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_microgenre',
            field=models.CharField(blank=True, help_text='What microgenre(s) would you associate with your album?', max_length=100),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_musical_elements',
            field=models.JSONField(blank=True, default=list, help_text='What musical elements/instruments do you love the most about your album?', validators=[matching.validators.ListOfStringsValidator('Your album musical elements are invalid.')]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='album_spotify_id',
            field=models.CharField(help_text='What album are you recommending?', max_length=22, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{22}$', 'Your Spotify ID was invalid.')]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='artist_1_spotify_id',
            field=models.CharField(help_text='What artists do you recommend?', max_length=22, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{22}$', 'Your Spotify ID was invalid.')]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='artist_2_spotify_id',
            field=models.CharField(help_text='What artists do you recommend?', max_length=22, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{22}$', 'Your Spotify ID was invalid.')]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='exchange_preference',
            field=models.CharField(choices=[('Talking', 'Talking and Recommendation'), ('Rec Only', 'Recommendation Only'), ('Networking', 'Networking')], help_text='What do you want to get out of the exchange?', max_length=15),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_adjectives',
            field=models.JSONField(default=list, help_text='Select the adjectives you want your match to embody.', validators=[matching.validators.ListOfStringsValidator('Your match adjectives are invalid.', 'match adjectives', choices=('All over the place', 'Ambitious/epic', 'Angry/passionate/intense', 'Chill/slow-paced/ballads', 'Classic/influential', 'Concept album', 'Danceable/festival', 'Disturbing/disgusting', 'Domestic/wholesome/sincere', 'Dreamy/meditative', 'Empowering/proud', 'Experimental/strange', 'Fast-paced/Upbeat', 'Funny', 'Happy/joyful', 'Heartbreaking/break-up', 'Instrumental (i.e. no lyrics)', 'Loud', 'LGBT', 'Lyrical', 'Musically complex', 'Musically simple/acoustic', 'Political', 'Psychedelic', 'Quiet', 'Romantic', 'Sad/melancholic/sombre', 'Screaming/shouting', 'Silly', 'Summery', 'Vibey', 'Wintery'))]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_country',
            field=models.CharField(blank=True, help_text='Are there any particular country(/ies) that you want your match to be from?', max_length=100),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_description',
            field=models.TextField(help_text='What kind of album would you like to be matched with?'),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_instrumental',
            field=models.BooleanField(help_text='Are you happy to receive an instrumental (no vocals) album?'),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_language',
            field=models.CharField(default='English', help_text='What language preferences do you have for your match?', max_length=80),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_macrogenre',
            field=models.JSONField(help_text='Which macrogenres would you be happy to receive recommendations from, in order of preference? Select at least 2.', validators=[matching.validators.ListOfStringsValidator('Your match macrogenre was invalid, you might not have selected enough genres.', 'match macrogenre', choices=[('CFB', 'Country, Folk & Blues'), ('Classical', 'Classical'), ('ED', 'Electronic and Dance'), ('HHRB', 'Hip Hop and R&B'), ('IIPEPP', 'Indie, Indie Pop, Emo and Pop Punk'), ('JSNSF', 'Jazz, Soul, Neo-Soul and Funk'), ('Pop', 'Pop'), ('RMPNPPRI', 'Rock, Metal, Punk, Noise, Prog, Post-Rock, Industrial'), ('Other', 'Other')], min_items=2)]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_microgenre',
            field=models.CharField(blank=True, help_text='Which microgenre(s) do you most want a match from?', max_length=100),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='match_musical_elements',
            field=models.JSONField(default=list, help_text='What musical elements/instruments do you want your match to have?', validators=[matching.validators.ListOfStringsValidator('Your match musical elements are invalid.')]),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='minds_not_talking',
            field=models.CharField(choices=[('Totally OK', 'Totally OK'), ('Medium OK', 'OK but preferably not'), ('Not OK', 'Not OK')], help_text="If you were matched with a non-musician person who didn't want to talk, would you mind?", max_length=20),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='minds_talking',
            field=models.CharField(choices=[('Totally OK', 'Totally OK'), ('Medium OK', 'OK but preferably not'), ('Not OK', 'Not OK')], help_text='If you were matched with a non-musician person who wants to have a chat, would you mind?', max_length=20),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='samey',
            field=models.IntegerField(choices=[(2, 'Strongly Agree'), (1, 'Somewhat Agree'), (0, 'Neither'), (-1, 'Somewhat Disagree'), (-2, 'Strongly Disagree')], help_text='To what extent do you agree with the statement "I want to find another person who listens to my type of music, even if I already know the album".'),
        ),
        migrations.AlterField(
            model_name='matchingentry',
            name='what_get_out',
            field=models.TextField(blank=True, help_text='What do you want to get out of this?'),
        ),
    ]
