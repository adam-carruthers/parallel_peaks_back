# Generated by Django 3.1.4 on 2020-12-21 00:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import matching.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchingEntry',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('exchange_preference', models.CharField(choices=[('Talking', 'Talking and Recommendation'), ('Rec Only', 'Recommendation Only'), ('Networking', 'Networking')], max_length=15)),
                ('minds_talking', models.CharField(choices=[('Totally OK', 'Totally OK'), ('Medium OK', 'OK but preferably not'), ('Not OK', 'Not OK')], max_length=20)),
                ('minds_not_talking', models.CharField(choices=[('Totally OK', 'Totally OK'), ('Medium OK', 'OK but preferably not'), ('Not OK', 'Not OK')], max_length=20)),
                ('album_spotify_id', models.CharField(max_length=22, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{22}$', 'Your Spotify ID was invalid.')])),
                ('album_macrogenre', models.CharField(choices=[('CFB', 'Country, Folk & Blues'), ('Classical', 'Classical'), ('ED', 'Electronic and Dance'), ('HHRB', 'Hip Hop and R&B'), ('IIPEPP', 'Indie, Indie Pop, Emo and Pop Punk'), ('JSNSF', 'Jazz, Soul, Neo-Soul and Funk'), ('Pop', 'Pop'), ('RMPNPPRI', 'Rock, Metal, Punk, Noise, Prog, Post-Rock, Industrial'), ('Other', 'Other')], max_length=15)),
                ('album_description', models.TextField()),
                ('album_microgenre', models.CharField(blank=True, max_length=100)),
                ('album_decade', models.CharField(blank=True, choices=[('', 'No Choice'), ('Pre-50s', 'Pre-50s'), ('50s', '50s'), ('60s', '60s'), ('70s', '70s'), ('80s', '80s'), ('90s', '90s'), ('00s', '2000s'), ('10s-20s', '2010s-20s')], max_length=10)),
                ('album_adjectives', models.JSONField(default=list, validators=[matching.validators.ListOfStringsValidator('Your album adjectives were invalid.', 'album adjectives', choices=('All over the place', 'Ambitious/epic', 'Angry/passionate/intense', 'Chill/slow-paced/ballads', 'Classic/influential', 'Concept album', 'Danceable/festival', 'Disturbing/disgusting', 'Domestic/wholesome/sincere', 'Dreamy/meditative', 'Empowering/proud', 'Experimental/strange', 'Fast-paced/Upbeat', 'Funny', 'Happy/joyful', 'Heartbreaking/break-up', 'Instrumental (i.e. no lyrics)', 'Loud', 'LGBT', 'Lyrical', 'Musically complex', 'Musically simple/acoustic', 'Political', 'Psychedelic', 'Quiet', 'Romantic', 'Sad/melancholic/sombre', 'Screaming/shouting', 'Silly', 'Summery', 'Vibey', 'Wintery'))])),
                ('album_musical_elements', models.JSONField(default=list, validators=[matching.validators.ListOfStringsValidator('Your album musical elements are invalid.')])),
                ('album_country', models.CharField(blank=True, max_length=70)),
                ('artist_1_spotify_id', models.CharField(max_length=22, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{22}$', 'Your Spotify ID was invalid.')])),
                ('artist_2_spotify_id', models.CharField(max_length=22, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{22}$', 'Your Spotify ID was invalid.')])),
                ('adventurous', models.IntegerField(choices=[('2', 'Strongly Agree'), ('1', 'Somewhat Agree'), ('0', 'Neither'), ('-1', 'Somewhat Disagree'), ('-2', 'Strongly Disagree')])),
                ('samey', models.IntegerField(choices=[('2', 'Strongly Agree'), ('1', 'Somewhat Agree'), ('0', 'Neither'), ('-1', 'Somewhat Disagree'), ('-2', 'Strongly Disagree')])),
                ('match_macrogenre', models.JSONField(validators=[matching.validators.ListOfStringsValidator('Your match macrogenre was invalid.', 'match macrogenre', choices=[('CFB', 'Country, Folk & Blues'), ('Classical', 'Classical'), ('ED', 'Electronic and Dance'), ('HHRB', 'Hip Hop and R&B'), ('IIPEPP', 'Indie, Indie Pop, Emo and Pop Punk'), ('JSNSF', 'Jazz, Soul, Neo-Soul and Funk'), ('Pop', 'Pop'), ('RMPNPPRI', 'Rock, Metal, Punk, Noise, Prog, Post-Rock, Industrial'), ('Other', 'Other')], min_items=2)])),
                ('match_language', models.CharField(default='English', max_length=80)),
                ('match_instrumental', models.BooleanField()),
                ('match_description', models.TextField()),
                ('match_microgenre', models.CharField(blank=True, max_length=100)),
                ('match_adjectives', models.JSONField(default=list, validators=[matching.validators.ListOfStringsValidator('Your match adjectives are invalid.', 'match adjectives', choices=('All over the place', 'Ambitious/epic', 'Angry/passionate/intense', 'Chill/slow-paced/ballads', 'Classic/influential', 'Concept album', 'Danceable/festival', 'Disturbing/disgusting', 'Domestic/wholesome/sincere', 'Dreamy/meditative', 'Empowering/proud', 'Experimental/strange', 'Fast-paced/Upbeat', 'Funny', 'Happy/joyful', 'Heartbreaking/break-up', 'Instrumental (i.e. no lyrics)', 'Loud', 'LGBT', 'Lyrical', 'Musically complex', 'Musically simple/acoustic', 'Political', 'Psychedelic', 'Quiet', 'Romantic', 'Sad/melancholic/sombre', 'Screaming/shouting', 'Silly', 'Summery', 'Vibey', 'Wintery'))])),
                ('match_musical_elements', models.JSONField(default=list, validators=[matching.validators.ListOfStringsValidator('Your match musical elements are invalid.')])),
                ('match_country', models.CharField(blank=True, max_length=100)),
                ('what_get_out', models.TextField(blank=True)),
            ],
        ),
    ]
